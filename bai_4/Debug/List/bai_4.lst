
AVRASM ver. 2.1.30  E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm Fri Nov 27 03:54:40 2020

E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm(1090): warning: Register r4 already defined by the .DEF directive
E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm(1091): warning: Register r5 already defined by the .DEF directive
E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm(1092): warning: Register r6 already defined by the .DEF directive
E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm(1093): warning: Register r7 already defined by the .DEF directive
E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm(1094): warning: Register r9 already defined by the .DEF directive
E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm(1095): warning: Register r8 already defined by the .DEF directive
E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm(1096): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128L
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128L
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dem=R4
                 	.DEF _dem_msb=R5
                 	.DEF _buf=R6
                 	.DEF _buf_msb=R7
                 	.DEF __lcd_x=R9
                 	.DEF __lcd_y=R8
                 	.DEF __lcd_maxx=R11
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000046 0000      	.DB  0x0,0x0
                 
                 _0x0:
000047 0030      	.DB  0x30,0x0
                 _0x2000003:
000048 c080      	.DB  0x80,0xC0
                 _0x2020060:
E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm(1150): warning: .cseg .db misalignment - padding zero byte
000049 0001      	.DB  0x1
                 _0x2020000:
00004a 4e2d
00004b 4e41
00004c 4900
00004d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\Code\learning\ktmt\thuchanh\bai_4\Debug\List\bai_4.asm(1153): warning: .cseg .db misalignment - padding zero byte
00004e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00004f 0002      	.DW  0x02
000050 0004      	.DW  0x04
000051 008c      	.DW  __REG_VARS*2
                 
000052 0002      	.DW  0x02
000053 0500      	.DW  _0x9
000054 008e      	.DW  _0x0*2
                 
000055 0002      	.DW  0x02
000056 0502      	.DW  __base_y_G100
000057 0090      	.DW  _0x2000003*2
                 
000058 0001      	.DW  0x01
000059 0506      	.DW  __seed_G101
00005a 0092      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00005b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005c 94f8      	CLI
00005d 27ee      	CLR  R30
00005e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005f e0f1      	LDI  R31,1
000060 bff5      	OUT  MCUCR,R31
000061 bfe5      	OUT  MCUCR,R30
000062 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000064 e08d      	LDI  R24,(14-2)+1
000065 e0a2      	LDI  R26,2
000066 27bb      	CLR  R27
                 __CLEAR_REG:
000067 93ed      	ST   X+,R30
000068 958a      	DEC  R24
000069 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006b e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006c e0a0      	LDI  R26,LOW(__SRAM_START)
00006d e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00006e 93ed      	ST   X+,R30
00006f 9701      	SBIW R24,1
000070 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000071 e9ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000072 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000073 9185      	LPM  R24,Z+
000074 9195      	LPM  R25,Z+
000075 9700      	SBIW R24,0
000076 f061      	BREQ __GLOBAL_INI_END
000077 91a5      	LPM  R26,Z+
000078 91b5      	LPM  R27,Z+
000079 9005      	LPM  R0,Z+
00007a 9015      	LPM  R1,Z+
00007b 01bf      	MOVW R22,R30
00007c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007d 9005      	LPM  R0,Z+
00007e 920d      	ST   X+,R0
00007f 9701      	SBIW R24,1
000080 f7e1      	BRNE __GLOBAL_INI_LOOP
000081 01fb      	MOVW R30,R22
000082 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000083 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000084 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000085 bfed      	OUT  SPL,R30
000086 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000087 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000088 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000089 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008a 940c 008c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * bai_4.c
                 ; *
                 ; * Created: 11/27/2020 3:42:33 AM
                 ; * Author: hoangi19
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;
                 ;#define BT1 PINB.2
                 ;#define BT2 PINB.3
                 ;#define BT3 PINB.0
                 ;
                 ;#define led PORTD.5
                 ;
                 ;int dem = 0;
                 ;char *buf;
                 ;
                 ;void main(void)
                 ; 0000 0017 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0018 
                 ; 0000 0019 DDRB = 0x00;
00008c e0e0      	LDI  R30,LOW(0)
00008d bbe7      	OUT  0x17,R30
                 ; 0000 001A PORTB = 0xFF;
00008e efef      	LDI  R30,LOW(255)
00008f bbe8      	OUT  0x18,R30
                 ; 0000 001B 
                 ; 0000 001C // DEN NEN MAN HINH
                 ; 0000 001D DDRD.7 = 1;
000090 9a8f      	SBI  0x11,7
                 ; 0000 001E PORTD.7 = 1;
000091 9a97      	SBI  0x12,7
                 ; 0000 001F 
                 ; 0000 0020 DDRD.5 = 1; // LED
000092 9a8d      	SBI  0x11,5
                 ; 0000 0021 
                 ; 0000 0022 lcd_init(16);
000093 e1a0      	LDI  R26,LOW(16)
000094 d0a2      	RCALL _lcd_init
                 ; 0000 0023 lcd_clear();
000095 940e 0194 	CALL SUBOPT_0x0
                 ; 0000 0024 lcd_gotoxy(0,0);
                 ; 0000 0025 lcd_puts("0");
                +
000097 e0a0     +LDI R26 , LOW ( _0x9 + ( 0 ) )
000098 e0b5     +LDI R27 , HIGH ( _0x9 + ( 0 ) )
                 	__POINTW2MN _0x9,0
000099 d08c      	RCALL _lcd_puts
                 ; 0000 0026 
                 ; 0000 0027 while (1)
                 _0xA:
                 ; 0000 0028     {
                 ; 0000 0029     // Please write your application code here
                 ; 0000 002A         if (BT1 == 0)
00009a 99b2      	SBIC 0x16,2
00009b c00d      	RJMP _0xD
                 ; 0000 002B         {
                 ; 0000 002C             while(BT2);
                 _0xE:
00009c 99b3      	SBIC 0x16,3
00009d cffe      	RJMP _0xE
                 ; 0000 002D             delay_ms(250);
00009e efaa      	LDI  R26,LOW(250)
00009f e0b0      	LDI  R27,0
0000a0 940e 01af 	CALL _delay_ms
                 ; 0000 002E             dem++;
0000a2 01f2      	MOVW R30,R4
0000a3 9631      	ADIW R30,1
0000a4 012f      	MOVW R4,R30
                 ; 0000 002F             itoa(dem, buf);
0000a5 940e 019b 	CALL SUBOPT_0x1
                 ; 0000 0030             lcd_clear();
                 ; 0000 0031             lcd_gotoxy(0,0);
                 ; 0000 0032             lcd_puts(buf);
0000a7 01d3      	MOVW R26,R6
0000a8 d07d      	RCALL _lcd_puts
                 ; 0000 0033         }
                 ; 0000 0034 
                 ; 0000 0035         if (BT2 == 0)
                 _0xD:
0000a9 99b3      	SBIC 0x16,3
0000aa c013      	RJMP _0x11
                 ; 0000 0036         {
                 ; 0000 0037             while(BT1);
                 _0x12:
0000ab 99b2      	SBIC 0x16,2
0000ac cffe      	RJMP _0x12
                 ; 0000 0038             delay_ms(250);
0000ad efaa      	LDI  R26,LOW(250)
0000ae e0b0      	LDI  R27,0
0000af 940e 01af 	CALL _delay_ms
                 ; 0000 0039             dem--;
0000b1 01f2      	MOVW R30,R4
0000b2 9731      	SBIW R30,1
0000b3 012f      	MOVW R4,R30
                 ; 0000 003A             if (dem < 0) dem = 0;
0000b4 2400      	CLR  R0
0000b5 1440      	CP   R4,R0
0000b6 0450      	CPC  R5,R0
0000b7 f414      	BRGE _0x15
0000b8 2444      	CLR  R4
0000b9 2455      	CLR  R5
                 ; 0000 003B             itoa(dem, buf);
                 _0x15:
0000ba 940e 019b 	CALL SUBOPT_0x1
                 ; 0000 003C             lcd_clear();
                 ; 0000 003D             lcd_gotoxy(0,0);
                 ; 0000 003E             lcd_puts(buf);
0000bc 01d3      	MOVW R26,R6
0000bd d068      	RCALL _lcd_puts
                 ; 0000 003F         }
                 ; 0000 0040 
                 ; 0000 0041         if (dem > 0) led = 1;
                 _0x11:
0000be 2400      	CLR  R0
0000bf 1404      	CP   R0,R4
0000c0 0405      	CPC  R0,R5
0000c1 f414      	BRGE _0x16
0000c2 9a95      	SBI  0x12,5
                 ; 0000 0042             else led = 0;
0000c3 c001      	RJMP _0x19
                 _0x16:
0000c4 9895      	CBI  0x12,5
                 ; 0000 0043     }
                 _0x19:
0000c5 cfd4      	RJMP _0xA
                 ; 0000 0044 }
                 _0x1C:
0000c6 cfff      	RJMP _0x1C
                 ; .FEND
                 
                 	.DSEG
                 _0x9:
000500           	.BYTE 0x2
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000c7 93aa      	ST   -Y,R26
0000c8 81e8      	LD   R30,Y
0000c9 71e0      	ANDI R30,LOW(0x10)
0000ca f011      	BREQ _0x2000004
0000cb 9adb      	SBI  0x1B,3
0000cc c001      	RJMP _0x2000005
                 _0x2000004:
0000cd 98db      	CBI  0x1B,3
                 _0x2000005:
0000ce 81e8      	LD   R30,Y
0000cf 72e0      	ANDI R30,LOW(0x20)
0000d0 f011      	BREQ _0x2000006
0000d1 9adc      	SBI  0x1B,4
0000d2 c001      	RJMP _0x2000007
                 _0x2000006:
0000d3 98dc      	CBI  0x1B,4
                 _0x2000007:
0000d4 81e8      	LD   R30,Y
0000d5 74e0      	ANDI R30,LOW(0x40)
0000d6 f011      	BREQ _0x2000008
0000d7 9add      	SBI  0x1B,5
0000d8 c001      	RJMP _0x2000009
                 _0x2000008:
0000d9 98dd      	CBI  0x1B,5
                 _0x2000009:
0000da 81e8      	LD   R30,Y
0000db 78e0      	ANDI R30,LOW(0x80)
0000dc f011      	BREQ _0x200000A
0000dd 9ade      	SBI  0x1B,6
0000de c001      	RJMP _0x200000B
                 _0x200000A:
0000df 98de      	CBI  0x1B,6
                 _0x200000B:
                +
0000e0 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000e1 958a     +DEC R24
0000e2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000e3 9ada      	SBI  0x1B,2
                +
0000e4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000e5 958a     +DEC R24
0000e6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000e7 98da      	CBI  0x1B,2
                +
0000e8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000e9 958a     +DEC R24
0000ea f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000eb c078      	RJMP _0x20A0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000ec 93aa      	ST   -Y,R26
0000ed 81a8      	LD   R26,Y
0000ee dfd8      	RCALL __lcd_write_nibble_G100
0000ef 81e8          ld    r30,y
0000f0 95e2          swap  r30
0000f1 83e8          st    y,r30
0000f2 81a8      	LD   R26,Y
0000f3 dfd3      	RCALL __lcd_write_nibble_G100
                +
0000f4 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000f5 958a     +DEC R24
0000f6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000f7 c06c      	RJMP _0x20A0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000f8 93aa      	ST   -Y,R26
0000f9 81e8      	LD   R30,Y
0000fa e0f0      	LDI  R31,0
0000fb 5fee      	SUBI R30,LOW(-__base_y_G100)
0000fc 4ffa      	SBCI R31,HIGH(-__base_y_G100)
0000fd 81e0      	LD   R30,Z
0000fe 81a9      	LDD  R26,Y+1
0000ff 0fae      	ADD  R26,R30
000100 dfeb      	RCALL __lcd_write_data
000101 8099      	LDD  R9,Y+1
000102 8088      	LDD  R8,Y+0
000103 9622      	ADIW R28,2
000104 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000105 e0a2      	LDI  R26,LOW(2)
000106 940e 01a1 	CALL SUBOPT_0x2
000108 e0ac      	LDI  R26,LOW(12)
000109 dfe2      	RCALL __lcd_write_data
00010a e0a1      	LDI  R26,LOW(1)
00010b 940e 01a1 	CALL SUBOPT_0x2
00010d e0e0      	LDI  R30,LOW(0)
00010e 2e8e      	MOV  R8,R30
00010f 2e9e      	MOV  R9,R30
000110 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000111 93aa      	ST   -Y,R26
000112 81a8      	LD   R26,Y
000113 30aa      	CPI  R26,LOW(0xA)
000114 f011      	BREQ _0x2000011
000115 149b      	CP   R9,R11
000116 f048      	BRLO _0x2000010
                 _0x2000011:
000117 e0e0      	LDI  R30,LOW(0)
000118 93ea      	ST   -Y,R30
000119 9483      	INC  R8
00011a 2da8      	MOV  R26,R8
00011b dfdc      	RCALL _lcd_gotoxy
00011c 81a8      	LD   R26,Y
00011d 30aa      	CPI  R26,LOW(0xA)
00011e f409      	BRNE _0x2000013
00011f c044      	RJMP _0x20A0001
                 _0x2000013:
                 _0x2000010:
000120 9493      	INC  R9
000121 9ad8      	SBI  0x1B,0
000122 81a8      	LD   R26,Y
000123 dfc8      	RCALL __lcd_write_data
000124 98d8      	CBI  0x1B,0
000125 c03e      	RJMP _0x20A0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000126 93ba      	ST   -Y,R27
000127 93aa      	ST   -Y,R26
000128 931a      	ST   -Y,R17
                 _0x2000014:
000129 81a9      	LDD  R26,Y+1
00012a 81ba      	LDD  R27,Y+1+1
00012b 91ed      	LD   R30,X+
00012c 83a9      	STD  Y+1,R26
00012d 83ba      	STD  Y+1+1,R27
00012e 2f1e      	MOV  R17,R30
00012f 30e0      	CPI  R30,0
000130 f019      	BREQ _0x2000016
000131 2fa1      	MOV  R26,R17
000132 dfde      	RCALL _lcd_putchar
000133 cff5      	RJMP _0x2000014
                 _0x2000016:
000134 8118      	LDD  R17,Y+0
000135 9623      	ADIW R28,3
000136 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000137 93aa      	ST   -Y,R26
000138 9ad3      	SBI  0x1A,3
000139 9ad4      	SBI  0x1A,4
00013a 9ad5      	SBI  0x1A,5
00013b 9ad6      	SBI  0x1A,6
00013c 9ad2      	SBI  0x1A,2
00013d 9ad0      	SBI  0x1A,0
00013e 9ad1      	SBI  0x1A,1
00013f 98da      	CBI  0x1B,2
000140 98d8      	CBI  0x1B,0
000141 98d9      	CBI  0x1B,1
000142 80b8      	LDD  R11,Y+0
000143 81e8      	LD   R30,Y
000144 58e0      	SUBI R30,-LOW(128)
                +
000145 93e0 0504+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000147 81e8      	LD   R30,Y
000148 54e0      	SUBI R30,-LOW(192)
                +
000149 93e0 0505+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00014b e1a4      	LDI  R26,LOW(20)
00014c e0b0      	LDI  R27,0
00014d 940e 01af 	CALL _delay_ms
00014f 940e 01a7 	CALL SUBOPT_0x3
000151 940e 01a7 	CALL SUBOPT_0x3
000153 940e 01a7 	CALL SUBOPT_0x3
000155 e2a0      	LDI  R26,LOW(32)
000156 df70      	RCALL __lcd_write_nibble_G100
                +
000157 ec88     +LDI R24 , LOW ( 200 )
000158 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000159 9701     +SBIW R24 , 1
00015a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00015b e2a8      	LDI  R26,LOW(40)
00015c df8f      	RCALL __lcd_write_data
00015d e0a4      	LDI  R26,LOW(4)
00015e df8d      	RCALL __lcd_write_data
00015f e8a5      	LDI  R26,LOW(133)
000160 df8b      	RCALL __lcd_write_data
000161 e0a6      	LDI  R26,LOW(6)
000162 df89      	RCALL __lcd_write_data
000163 dfa1      	RCALL _lcd_clear
                 _0x20A0001:
000164 9621      	ADIW R28,1
000165 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
000166 93ba      	ST   -Y,R27
000167 93aa      	ST   -Y,R26
000168 91a9          ld   r26,y+
000169 91b9          ld   r27,y+
00016a 91e9          ld   r30,y+
00016b 91f9          ld   r31,y+
00016c 9630          adiw r30,0
00016d f42a          brpl __itoa0
00016e 95e0          com  r30
00016f 95f0          com  r31
000170 9631          adiw r30,1
000171 e26d          ldi  r22,'-'
000172 936d          st   x+,r22
                 __itoa0:
000173 94e8          clt
000174 e180          ldi  r24,low(10000)
000175 e297          ldi  r25,high(10000)
000176 d00d          rcall __itoa1
000177 ee88          ldi  r24,low(1000)
000178 e093          ldi  r25,high(1000)
000179 d00a          rcall __itoa1
00017a e684          ldi  r24,100
00017b 2799          clr  r25
00017c d007          rcall __itoa1
00017d e08a          ldi  r24,10
00017e d005          rcall __itoa1
00017f 2f6e          mov  r22,r30
000180 d010          rcall __itoa5
000181 2766          clr  r22
000182 936c          st   x,r22
000183 9508          ret
                 
                 __itoa1:
000184 2766          clr	 r22
                 __itoa2:
000185 17e8          cp   r30,r24
000186 07f9          cpc  r31,r25
000187 f020          brlo __itoa3
000188 9563          inc  r22
000189 1be8          sub  r30,r24
00018a 0bf9          sbc  r31,r25
00018b f7c9          brne __itoa2
                 __itoa3:
00018c 2366          tst  r22
00018d f411          brne __itoa4
00018e f016          brts __itoa5
00018f 9508          ret
                 __itoa4:
000190 9468          set
                 __itoa5:
000191 5d60          subi r22,-0x30
000192 936d          st   x+,r22
000193 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
000502           	.BYTE 0x4
                 __seed_G101:
000506           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
000194 940e 0105 	CALL _lcd_clear
000196 e0e0      	LDI  R30,LOW(0)
000197 93ea      	ST   -Y,R30
000198 e0a0      	LDI  R26,LOW(0)
000199 940c 00f8 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
00019b 925a      	ST   -Y,R5
00019c 924a      	ST   -Y,R4
00019d 01d3      	MOVW R26,R6
00019e 940e 0166 	CALL _itoa
0001a0 cff3      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0001a1 940e 00ec 	CALL __lcd_write_data
0001a3 e0a3      	LDI  R26,LOW(3)
0001a4 e0b0      	LDI  R27,0
0001a5 940c 01af 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
0001a7 e3a0      	LDI  R26,LOW(48)
0001a8 940e 00c7 	CALL __lcd_write_nibble_G100
                +
0001aa ec88     +LDI R24 , LOW ( 200 )
0001ab e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0001ac 9701     +SBIW R24 , 1
0001ad f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0001ae 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0001af 9610      	adiw r26,0
0001b0 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0001b1 ed80     +LDI R24 , LOW ( 0x7D0 )
0001b2 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0001b3 9701     +SBIW R24 , 1
0001b4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0001b5 95a8      	wdr
0001b6 9711      	sbiw r26,1
0001b7 f7c9      	brne __delay_ms0
                 __delay_ms1:
0001b8 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128L register use summary:
r0 :  10 r1 :   1 r2 :   0 r3 :   0 r4 :   8 r5 :   4 r6 :   3 r7 :   0 
r8 :   4 r9 :   4 r10:   0 r11:   2 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   4 r18:   0 r19:   0 r20:   0 r21:   0 r22:  12 r23:   0 
r24:  28 r25:  10 r26:  45 r27:  13 r28:   4 r29:   1 r30:  62 r31:   9 
x  :   7 y  :  41 z  :   8 
Registers used: 21 out of 35 (60.0%)

ATmega128L instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   7 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   8 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :  14 brpl  :   1 brsh  :   0 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  15 
cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :   4 cpc   :   3 cpi   :   3 cpse  :   0 dec   :   5 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 
ijmp  :   0 in    :   0 inc   :   3 jmp   :  38 ld    :  19 ldd   :   7 
ldi   :  57 lds   :   0 lpm   :   7 lsl   :   0 lsr   :   0 mov   :   6 
movw  :  10 mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 
or    :   0 ori   :   0 out   :   8 pop   :   0 push  :   0 rcall :  22 
ret   :   9 reti  :   0 rjmp  :  18 rol   :   0 ror   :   0 sbc   :   1 
sbci  :   1 sbi   :  17 sbic  :   4 sbis  :   0 sbiw  :   8 sbr   :   0 
sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  21 std   :   2 sts   :   3 sub   :   1 subi  :   4 
swap  :   1 tst   :   1 wdr   :   1 
Instructions used: 45 out of 117 (38.5%)

ATmega128L memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000372    838     44    882  131072   0.7%
[.dseg] 0x000100 0x00050a      0     10     10    4096   0.2%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 9 warnings
